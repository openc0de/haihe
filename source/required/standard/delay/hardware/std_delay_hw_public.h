/**
 * @file std_delay_hw_public.h
 * @brief 标准硬件延时公有文件
 * @author openc0de (openc0de@hotmail.com)
 * @since Thu Jun 15 2023 22:16 +0800
 *
 * @name openc0de (openc0de@hotmail.com)
 * @date Thu Jun 15 2023 22:24 +0800
 * @version 0.00.001
 *
 * @copyright copyright ©2023 by openc0de, all rights reserved.
 *
 * @details
 * -----------------------------------------------------------------------------
 *    version   |             date            |       by       |    comments
 * ------------ | --------------------------- | -------------- | ---------------
 *   0.00.001   | Thu Jun 15 2023 22:16 +0800 |    openc0de    | 初版
 * -----------------------------------------------------------------------------
 */

#ifndef __STD_DELAY_HW_PUBLIC_H__
#define __STD_DELAY_HW_PUBLIC_H__

/*header files******************************************************************/

    /*required******************************************************************/



        /*autosar***************************************************************/



            /*swc***************************************************************/



            /*rte***************************************************************/



            /*bsw***************************************************************/



        /*standard**************************************************************/



        /*system****************************************************************/



    /*optional******************************************************************/



        /*bsp*******************************************************************/



        /*open******************************************************************/



        /*os********************************************************************/



        /*sdk*******************************************************************/



        /*test******************************************************************/



/*types*************************************************************************/

    /*boolean*******************************************************************/



    /*char**********************************************************************/



    /*double********************************************************************/



    /*float*********************************************************************/



    /*integer*******************************************************************/



    /*void**********************************************************************/



    /*macro*********************************************************************/



    /*structure*****************************************************************/



    /*enumeration***************************************************************/



    /*union*********************************************************************/



    /*function******************************************************************/



/*declarations******************************************************************/

    /*function******************************************************************/

    /**
     * @brief 基本硬件延时
     *
     */
    vd v_std_delay_hw_do_nothing(vd);

    /**
     * @brief 微秒硬件延时
     *
     * @param[in] u32_size - 大小
     */
    vd v_std_delay_hw_us(u32 u32_size);

    /**
     * @brief 毫秒硬件延时
     *
     * @param[in] u32_size - 大小
     */
    vd v_std_delay_hw_ms(u32 u32_size);

    /**
     * @brief 秒硬件延时
     *
     * @param[in] u32_size - 大小
     */
    vd v_std_delay_hw_s(u32 u32_size);

    /**
     * @brief 分钟硬件延时
     *
     * @param[in] u32_size - 大小
     */
    vd v_std_delay_hw_min(u32 u32_size);

    /**
     * @brief 1微秒硬件延时
     *
     */
    vd v_std_delay_hw_1us(vd);

    /**
     * @brief 10微秒硬件延时
     *
     */
    vd v_std_delay_hw_10us(vd);

    /**
     * @brief 50微秒硬件延时
     *
     */
    vd v_std_delay_hw_50us(vd);

    /**
     * @brief 100微秒硬件延时
     *
     */
    vd v_std_delay_hw_100us(vd);

    /**
     * @brief 200微秒硬件延时
     *
     */
    vd v_std_delay_hw_200us(vd);

    /**
     * @brief 500微秒硬件延时
     *
     */
    vd v_std_delay_hw_500us(vd);

    /**
     * @brief 1毫秒硬件延时
     *
     */
    vd v_std_delay_hw_1ms(vd);

    /**
     * @brief 10毫秒硬件延时
     *
     */
    vd v_std_delay_hw_10ms(vd);

    /**
     * @brief 50毫秒硬件延时
     *
     */
    vd v_std_delay_hw_50ms(vd);

    /**
     * @brief 100毫秒硬件延时
     *
     */
    vd v_std_delay_hw_100ms(vd);

    /**
     * @brief 200毫秒硬件延时
     *
     */
    vd v_std_delay_hw_200ms(vd);

    /**
     * @brief 500毫秒硬件延时
     *
     */
    vd v_std_delay_hw_500ms(vd);

    /**
     * @brief 1秒硬件延时
     *
     */
    vd v_std_delay_hw_1s(vd);

    /**
     * @brief 2秒硬件延时
     *
     */
    vd v_std_delay_hw_2s(vd);

    /**
     * @brief 5秒硬件延时
     *
     */
    vd v_std_delay_hw_5s(vd);

    /**
     * @brief 10秒硬件延时
     *
     */
    vd v_std_delay_hw_10s(vd);

    /**
     * @brief 15秒硬件延时
     *
     */
    vd v_std_delay_hw_15s(vd);

    /**
     * @brief 20秒硬件延时
     *
     */
    vd v_std_delay_hw_20s(vd);

    /**
     * @brief 30秒硬件延时
     *
     */
    vd v_std_delay_hw_30s(vd);

    /**
     * @brief 1分钟硬件延时
     *
     */
    vd v_std_delay_hw_1min(vd);

#endif /* __STD_DELAY_HW_PUBLIC_H__ */
